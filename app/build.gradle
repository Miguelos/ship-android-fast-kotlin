repositories {
  google()
}
buildscript {
  repositories {
    jcenter()
    mavenCentral()
    google()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
  }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {

  compileSdkVersion rootProject.ext.androidCompileSdkVersion
  buildToolsVersion rootProject.ext.androidBuildToolsVersion

  defaultConfig {
    minSdkVersion rootProject.ext.androidMinSdkVersion
    targetSdkVersion rootProject.ext.androidTargetSdkVersion
    applicationId rootProject.ext.androidApplicationId
    versionCode rootProject.ext.androidVersionCode
    versionName rootProject.ext.androidVersionName
    testInstrumentationRunner rootProject.ext.testInstrumentationRunner
    testApplicationId rootProject.ext.testApplicationId
  }

  aaptOptions {
    additionalParameters "--no-version-vectors"
  }

  lintOptions {
    quiet true
    abortOnError false
    ignoreWarnings true
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
  }

  signingConfigs {
    release {
      def props = new Properties()
      props.load(new FileInputStream(rootProject.file("config/buildsystem/release.properties")))

      storeFile file(props.keyStore)
      storePassword props.keyStorePassword
      keyAlias props.keyAlias
      keyPassword props.keyAliasPassword
    }
  }

  buildTypes {
    debug {

      def type = rootProject.ext.debug
      applicationIdSuffix '.debug'
      buildConfigField "String", "API_URL", type.apiUrl
      minifyEnabled false
      debuggable true
    }

    stage {

      def type = rootProject.ext.stage
      applicationIdSuffix '.stage'
      buildConfigField "String", "API_URL", type.apiUrl
      //TODO: fix anko version to allow minification
      minifyEnabled true
      debuggable true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro',
          'proguard-rules-stage.pro'
      signingConfig signingConfigs.debug
    }

    release {

      def type = rootProject.ext.prod
      buildConfigField "String", "API_URL", type.apiUrl
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
    }
  }

  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
  }

/*
  TODO: if we want to minimize the size of the apk with different releases for fresco libs
 splits {
    abi {
      enable true
      reset()
      include 'x86', 'x86_64', 'arm64-v8a', 'armeabi-v7a', 'armeabi'
      universalApk false
    }
  }*/
}

dependencies {
  def presentationDependencies = rootProject.ext.presentationDependencies
  def presentationTestDependencies = rootProject.ext.presentationTestDependencies
  def dataDependencies = rootProject.ext.dataDependencies

  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

  kapt presentationDependencies.daggerCompiler
  implementation presentationDependencies.dagger

  implementation presentationDependencies.material

  implementation presentationDependencies.fresco
  implementation presentationDependencies.frescoOkhttp

  implementation presentationDependencies.timber

  implementation presentationDependencies.rxJava
  implementation presentationDependencies.rxAndroid
  implementation presentationDependencies.rxKotlin

  implementation presentationDependencies.ankoSdk
  implementation presentationDependencies.ankoSupport
  implementation presentationDependencies.ankoAppcompat
  implementation presentationDependencies.ankoDesign
  implementation presentationDependencies.ankoRecyclerview
  implementation presentationDependencies.ankoCards

  debugImplementation presentationDependencies.leakcanaryDebug

  compileOnly presentationDependencies.javaxAnnotation

  implementation dataDependencies.retrofit2
  implementation dataDependencies.retrofit2MoshiConverter
  implementation dataDependencies.retrofit2RxAdapter
  implementation dataDependencies.okHttpLoggingInterceptor
  implementation dataDependencies.moshi

  androidTestImplementation presentationTestDependencies.mockito
  androidTestImplementation presentationTestDependencies.dexmaker
  androidTestImplementation presentationTestDependencies.dexmakerMockito
}

kapt {
  generateStubs = true
}
